//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.Example
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class PanelFightBgData : QFramework.UIPanelData
    {
        public static GameModel model = GameModel.Instance;
    }
    
    public partial class PanelFightBg : QFramework.UIPanel
    {
        GameModel model = PanelFightBgData.model;
        private bool IsPanelChatOn = false;
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            switch (eventId)
            {
                case (int)UIEventEnum.Fight.LeftEnter:
                    UIKit.OpenPanel<PanelLeftPlayer>();
                    break;
                case (int)UIEventEnum.Fight.RightEnter:
                    UIKit.OpenPanel<PanelRightPlayer>();
                    break;
     
                
                case (int)UIEventEnum.Fight.LeftLeave:
                    UIKit.ClosePanel<PanelLeftPlayer>();
                    break;
                case (int)UIEventEnum.Fight.RightLeave:
                    UIKit.ClosePanel<PanelRightPlayer>();
                    break;
            }
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as PanelFightBgData ?? new PanelFightBgData();
            // please add init code here
            RegisterEvent(UIEventEnum.Fight.LeftEnter);
            RegisterEvent(UIEventEnum.Fight.RightEnter);
            
            RegisterEvent(UIEventEnum.Fight.LeftLeave);
            RegisterEvent(UIEventEnum.Fight.RightLeave);
            


            
            gameObject.Find<Button>("BtnSetting").onClick.AddListener(() =>
            {
                UIKit.OpenPanel<PanelSetting>(UILevel.PopUI);
            });
            
            BtnChat.onClick.AddListener(() =>
            {
                if (IsPanelChatOn)
                {
                    UIKit.ClosePanel<PanelChat>();
                    IsPanelChatOn = false;
                }
                else
                {
                    UIKit.OpenPanel<PanelChat>();
                    IsPanelChatOn = true;
                }
            });
            
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
            model.Refresh();
            if (GameModel.Instance.LeftPlayer>=0)
            {
                SendEvent(UIEventEnum.Fight.LeftEnter);
            }
            if (GameModel.Instance.RightPlayer>=0)
            {
                SendEvent(UIEventEnum.Fight.RightEnter);
            }
            
            if (GameModel.Instance.IsReady(GameModel.Instance.LeftPlayer))
            {
                UIManager.Instance.SendEvent(UIEventEnum.Fight.LeftReady);
            }
            else if (GameModel.Instance.IsReady(GameModel.Instance.RightPlayer))
            {
                UIManager.Instance.SendEvent(UIEventEnum.Fight.RightReady);
            }
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
        
    }
}
