//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.Example
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using Protocol;
    
    
    public class PanelSelfPlayerData : QFramework.UIPanelData
    {
    }
    
    public partial class PanelSelfPlayer : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            var ImgChat = gameObject.Find<Image>("ImgChat");
            var txtChat = gameObject.Find<Text>("ImgChat/TxtChat");
            switch (eventId)
            {
                #region Chat
                
                case (int)UIEventEnum.Fight.SelfChat1:
                    txtChat.text = "阿姨你快点呐，别磨磨蹭蹭的";
                    
                    ImgChat.gameObject.SetActive(true);
                    AudioKit.PlaySound("Chat1");
                    this.Delay(3, () =>
                    {
                        ImgChat.gameObject.SetActive(false);
                    });
                    break;

                case (int) UIEventEnum.Fight.SelfChat2:
                    txtChat.text = "给阿姨倒一杯卡布奇诺";
                    
                    ImgChat.gameObject.SetActive(true);
                    AudioKit.PlaySound("Chat2");
                    this.Delay(3, () =>
                    {
                        ImgChat.gameObject.SetActive(false);
                    });
                    break;

                case (int) UIEventEnum.Fight.SelfChat3:
                    txtChat.text = "开始你的炸弹秀";
                    
                    ImgChat.gameObject.SetActive(true);
                    AudioKit.PlaySound("Chat3");
                    this.Delay(3, () =>
                    {
                        ImgChat.gameObject.SetActive(false);
                    });
                    break;
                    

                #endregion
                
                case (int)UIEventEnum.Fight.ShowGrabButton:
                    BtnGrab.gameObject.SetActive(true);
                    BtnNotGrab.gameObject.SetActive(true);
                    break;
                
                case (int)UIEventEnum.Fight.ShowDealButton:
                    this.Delay(0.3f,() =>
                    {
                        BtnDeal.gameObject.SetActive(true);
                        BtnNotDeal.gameObject.SetActive(true);
                    });

                    break;
                
                case (int)UIEventEnum.Fight.HideState:
                    //Debug.Log("HideState");
                    TxtState.gameObject.SetActive(false);
                    break;
                
                
                
            }
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as PanelSelfPlayerData ?? new PanelSelfPlayerData();
            // please add init code here
            RegisterEvent(UIEventEnum.Fight.SelfChat1);
            RegisterEvent(UIEventEnum.Fight.SelfChat2);
            RegisterEvent(UIEventEnum.Fight.SelfChat3);
            RegisterEvent(UIEventEnum.Fight.ShowGrabButton);
            RegisterEvent(UIEventEnum.Fight.ShowDealButton);
            RegisterEvent(UIEventEnum.Fight.HideState);
            
            BtnReady.onClick.AddListener(() =>
            {
                SocketMsg socketMsg = SocketMsgPool.Instance.Allocate(
                    (int)OpCode.Match,
                    (int)SubCode.Match.Ready_CReq,
                    null
                );
                
                SendMsg(new EventMsg(socketMsg,NetEvent.Send));
                BtnReady.gameObject.SetActive(false);
            });
            
            BtnGrab.onClick.AddListener(() =>
            {
                SendEvent(UIEventEnum.Fight.HideState);
                
                SocketMsg socketMsg = SocketMsgPool.Instance.Allocate(
                    (int)OpCode.Fight,
                    (int)SubCode.Fight.GrabLandlord_Creq,
                    true
                );
                NetMgr.Instance.SendMsg(new EventMsg(socketMsg,NetEvent.Send));
                
                BtnGrab.gameObject.SetActive(false);
                BtnNotGrab.gameObject.SetActive(false);
            });
            BtnNotGrab.onClick.AddListener(() =>
            {
                SendEvent(UIEventEnum.Fight.HideState);

                SocketMsg socketMsg = SocketMsgPool.Instance.Allocate(
                    (int)OpCode.Fight,
                    (int)SubCode.Fight.GrabLandlord_Creq,
                    false
                );
                NetMgr.Instance.SendMsg(new EventMsg(socketMsg,NetEvent.Send));
                
                BtnGrab.gameObject.SetActive(false);
                BtnNotGrab.gameObject.SetActive(false);
            });
            
            BtnDeal.onClick.AddListener(() =>
            {
                PlayerManager.Instance.SendMsg(new EventMsg(null,(int)GameEvent.SelfCard.Deal_SelfCard));
                
                BtnDeal.gameObject.SetActive(false);
                BtnNotDeal.gameObject.SetActive(false);
            });
            BtnNotDeal.onClick.AddListener(() =>
            {
                SocketMsg socketMsg = SocketMsgPool.Instance.Allocate(
                    (int)OpCode.Fight,
                    (int)SubCode.Fight.Pass_Creq,
                    null
                    );
                //PlayerManager.Instance.SendMsg(new EventMsg(null,(int)GameEvent.SelfCard.Deal_SelfCard));
                NetMgr.Instance.SendMsg(new EventMsg(socketMsg,NetEvent.Send));
                
                BtnDeal.gameObject.SetActive(false);
                BtnNotDeal.gameObject.SetActive(false);
            });
            
            
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }
}
